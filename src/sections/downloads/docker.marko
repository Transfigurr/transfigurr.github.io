<dl class="install-steps">
    <install-step title="Introduction">
        <migration-alert>
            Most docker containers use <code>/config</code> volume to mount the data directory and supply that path to Transfigurr as parameter.
            Transfigurr will convert the given directory on startup if an existing database is found. Of course, it is always advisable to make a backup first.
        </migration-alert>
    </install-step>
    <install-step num="1" title="Avoid common pitfalls">
        <p>
            <i>For a detailed explanation of common issues, see <a href="https://wiki.servarr.com/docker-guide">The Best Docker Setup and Docker Guide</a> wiki article.</i>
        </p>
    </install-step>
    <install-step num="2" title="Install Transfigurr">
        <p>
            There are many ways to manage Docker images and containers too, so installation and maintenance of them will depend on the route you choose.
            
To help you get started creating a container from this image you can either use docker-compose or the docker cli.

<h3>docker-compose (recommended)</h3>

<pre><code>---
services:
  transfigurr:
    image: transfigurr/transfigurr:latest
    container_name: transfigurr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /path/to/data:/config
      - /path/to/series:/series #optional
      - /path/to/movies:/movies #optional
      - /path/to/transcode/transcode #optional
    ports:
      - 7889:7889
    restart: unless-stopped
</code></pre>

<h3>docker cli</h3>

<pre><code>docker run -d \
  --name=transfigurr \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Etc/UTC \
  -p 7889:7889 \
  -v /path/to/data:/config \
  -v /path/to/series:/series #optional \
  -v /path/to/movies:/movies #optional \
  -v /path/to/transcode:/transcode #optional \
  --restart unless-stopped \
  transfigurr/transfigurr:latest
</code></pre>

<h2>Parameters</h2>

<p>Containers are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate &lt;external&gt;:&lt;internal&gt; respectively. For example, -p 8080:80 would expose port 80 from inside the container to be accessible from the host's IP on port 8080 outside the container.</p>

<table style="border-collapse: collapse; width: 100%; border: 1px solid #ccc; border-radius: 4px; background-color: #f5f5f5;">
  <tr>
    <th style="border-bottom: 1px solid #ddd; padding: 8px; text-align: left; border-right: 1px solid #ddd;">Parameter</th>
    <th style="border-bottom: 1px solid #ddd; padding: 8px; text-align: left;">Function</th>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-p 7889</td>
    <td style="padding: 8px;">The port for the Transfigurr webinterface</td>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-e PUID=1000</td>
    <td style="padding: 8px;">for UserID - see below for explanation</td>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-e PGID=1000</td>
    <td style="padding: 8px;">for GroupID - see below for explanation</td>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-e TZ=Etc/UTC</td>
    <td style="padding: 8px;">specify a timezone to use, see this <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List">list</a>.</td>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-v /config</td>
    <td style="padding: 8px;">Database and transfigurr configs</td>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-v /series</td>
    <td style="padding: 8px;">Location of series library on disk (See note in Application setup)</td>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-v /movies</td>
    <td style="padding: 8px;">Location of movies library on disk (See note in Application setup)</td>
  </tr>
  <tr>
    <td style="padding: 8px; border-right: 1px solid #ddd;">-v /transcode</td>
    <td style="padding: 8px;">Location of transcode library on disk (See note in Application setup)</td>
  </tr>
</table>

<h2>Environment variables from files (Docker secrets)</h2>

<p>You can set any environment variable from a file by using a special prepend <code>FILE__</code>.</p>

<p>As an example:</p>

<pre><code>-e FILE__MYVAR=/run/secrets/mysecretvariable
</code></pre>

<p>Will set the environment variable <code>MYVAR</code> based on the contents of the <code>/run/secrets/mysecretvariable</code> file.</p>

<h2>User / Group Identifiers</h2>

<p>When using volumes (<code>-v</code> flags), permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user <code>PUID</code> and group <code>PGID</code>.</p>

<p>Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.</p>

<p>In this instance <code>PUID=1000</code> and <code>PGID=1000</code>, to find yours use <code>id your_user</code> as below:</p>

<pre><code>id your_user
</code></pre>

<p>Example output:</p>

<pre><code>uid=1000(your_user) gid=1000(your_user) groups=1000(your_user)
</code></pre>

<h2>Support Info</h2>

<ul>
  <li>Shell access whilst the container is running:</li>
</ul>

<pre><code>docker exec -it transfigurr /bin/bash
</code></pre>

<ul>
  <li>To monitor the logs of the container in realtime:</li>
</ul>

<pre><code>docker logs -f transfigurr
</code></pre>

<ul>
  <li>Container version number:</li>
</ul>

<pre><code>docker inspect -f '{{ index .Config.Labels "build_version" }}' transfigurr
</code></pre>

<ul>
  <li>Image version number:</li>
</ul>

<pre><code>docker inspect -f '{{ index .Config.Labels "build_version" }}' transfigurr/transfigurr:latest
</code></pre>

<h2>Updating Info</h2>

<p>Below are the instructions for updating containers:</p>

<h3>Via Docker Compose</h3>

<ul>
  <li>Update images:</li>
</ul>

<ul>
  <li>All images:</li>
</ul>

<pre><code>docker-compose pull
</code></pre>

<ul>
  <li>Single image:</li>
</ul>

<pre><code>docker-compose pull transfigurr
</code></pre>

<ul>
  <li>Update containers:</li>
</ul>

<ul>
  <li>All containers:</li>
</ul>

<pre><code>docker-compose up -d
</code></pre>

<ul>
  <li>Single container:</li>
</ul>

<pre><code>docker-compose up -d transfigurr
</code></pre>

<ul>
  <li>You can also remove the old dangling images:</li>
</ul>

<pre><code>docker image prune
</code></pre>

<h3>Via Docker Run</h3>

<ul>
  <li>Update the image:</li>
</ul>

<pre><code>docker pull transfigurr/transfigurr:latest
</code></pre>

<ul>
  <li>Stop the running container:</li>
</ul>

<pre><code>docker stop transfigurr
</code></pre>

<ul>
  <li>Delete the container:</li>
</ul>

<pre><code>docker rm transfigurr
</code></pre>

<p>Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your <code>/config</code> folder and settings will be preserved)</p>

<ul>
  <li>You can also remove the old dangling images:</li>
</ul>

<pre><code>docker image prune
</code></pre>

        </p>
    </install-step>
</dl>
